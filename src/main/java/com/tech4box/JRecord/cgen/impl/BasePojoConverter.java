package com.tech4box.JRecord.cgen.impl;


import java.io.IOException;

import com.tech4box.JRecord.Common.RecordException;
import com.tech4box.JRecord.Details.AbstractLine;
import com.tech4box.JRecord.cgen.def.IPojoConverter;
import com.tech4box.JRecord.def.IO.builders.INewLineCreator;


/**
 * Base class to convert Pojo to/from JRecord Lines/Cobol records.
 * This class is extended by Classes generated by CodeGen
 * 
 * @author Bruce Martin
 *
 * @param <Pojo> Java representation of Cobol Object
 */
public abstract class BasePojoConverter<Pojo> implements IPojoConverter<Pojo>, INewLineCreator {

	private final AbstractLine tmpLine;
	private final INewLineCreator lineCreator;
	
	public BasePojoConverter(INewLineCreator lineCreator) {
		this.lineCreator = lineCreator;
		try {
			this.tmpLine = lineCreator.newLine();
		} catch (IOException e) {
			throw new RecordException("Error creating line", e);
		}
	}

	@Override
	public Pojo deserialize(byte[] rec) {
		tmpLine.setData(rec);
		return toPojo(tmpLine);
	}

	@Override
	public byte[] serialize(Pojo rec) {
		updateLine(tmpLine, rec);
		return tmpLine.getData();
	}
	
	public AbstractLine toLine(Pojo pojo) {
		AbstractLine line;
		try {
			line = lineCreator.newLine();
		} catch (IOException e) {
			throw new RecordException("Error creating line", e);
		}
		
		updateLine(line, pojo);
		return line;
	}

	public AbstractLine newLine() throws IOException {
		return lineCreator.newLine();
	}

}
